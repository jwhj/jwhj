<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分块 on 蒟蒻的博客</title>
    <link>http://whatever.seraphim.rocks/tags/%E5%88%86%E5%9D%97/</link>
    <description>Recent content in 分块 on 蒟蒻的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Jan 2018 14:41:56 +0000</lastBuildDate>
    
	<atom:link href="http://whatever.seraphim.rocks/tags/%E5%88%86%E5%9D%97/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jzoj5260题解</title>
      <link>http://whatever.seraphim.rocks/post/jz5260/</link>
      <pubDate>Tue, 09 Jan 2018 14:41:56 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/jz5260/</guid>
      <description>首先不管强制在线，不管数据范围，只考虑设计一个亚二次的算法，显然可以用莫队+值域线段树在$O(n\sqrt{n}\log n)$的时间内解决。但是这个做法会爆0+卡爆机房的奔腾cpu电脑……
注意到在莫队算法中，因端点改变对值域线段树造成的修改有$O(n\sqrt{n})$次，但是对值域线段树的询问只有$O(n)$次，所以可以考虑牺牲询问来加速修改。
考虑对值域也分块，维护每个块里面出现次数&amp;lt;=w的数的总出现次数，以及每个数具体的出现次数，就可以做到$O(n\sqrt{n})$。
最后再把莫队改成强制在线的莫队，预处理出f[i][j][k]表示第i块到第j块中，值在第k块中的，出现次数&amp;lt;=w的数的出现次数，以及g[i][j]表示前i块中j的出现次数。
写的时候因为一个sb错误debug了很久，以后要注意，为了代码简单把几种情况归成一种情况写的时候，需要仔细研究几种情况的不同点。比方说，l，r在同一块的时候，就不要写出g[r/S-1][j]这样优秀的潜在未定义行为（因为r可能在第0块）。
代码：
#include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cmath&amp;gt; #define ele int using namespace std; #define maxn 100010 #define maxb 320 ele n; struct arr{ ele t,a[maxn],b[maxn]; arr(){ t=0; memset(b,0,sizeof(b)); } inline ele&amp;amp; operator[](ele i){ if (b[i]&amp;lt;t) b[i]=t,a[i]=0; return a[i]; } }; ele w,q,ty,S,bcnt,a[maxn],f[maxb][maxb][maxb],g[maxb][maxn],tmp[maxb]; arr cnt; inline ele calc(ele l,ele r,ele x){ if (l/S&amp;lt;r/S) return cnt[x]+g[r/S-1][x]-g[l/S][x]; else return cnt[x]; } int main(){ scanf(&amp;quot;%d%d%d%d&amp;quot;,&amp;amp;n,&amp;amp;w,&amp;amp;q,&amp;amp;ty); for (int i=0; i&amp;lt;n; ++i) scanf(&amp;quot;%d&amp;quot;,a+i); S=sqrt(n); bcnt=0; for (int i=0; i&amp;lt;n; i+=S,++bcnt) for (int j=i; j&amp;lt;n &amp;amp;&amp;amp; j&amp;lt;i+S; ++j) ++g[bcnt][a[j]]; for (int i=1; i&amp;lt;bcnt; ++i) for (int j=0; j&amp;lt;n; ++j) g[i][j]+=g[i-1][j]; memset(f,0,sizeof(f)); for (int i=0; i&amp;lt;bcnt; ++i){ ++cnt.</description>
    </item>
    
    <item>
      <title>bzoj4540题解</title>
      <link>http://whatever.seraphim.rocks/post/bzoj4540/</link>
      <pubDate>Sun, 12 Feb 2017 10:02:43 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/bzoj4540/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bzoj3295题解</title>
      <link>http://whatever.seraphim.rocks/post/bzoj3295/</link>
      <pubDate>Wed, 01 Feb 2017 10:02:43 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/bzoj3295/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bzoj3196题解</title>
      <link>http://whatever.seraphim.rocks/post/bzoj3196/</link>
      <pubDate>Fri, 27 Jan 2017 10:02:43 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/bzoj3196/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bzoj2741题解</title>
      <link>http://whatever.seraphim.rocks/post/bzoj2741/</link>
      <pubDate>Mon, 05 Dec 2016 10:02:43 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/bzoj2741/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bzoj3744题解</title>
      <link>http://whatever.seraphim.rocks/post/bzoj3744/</link>
      <pubDate>Thu, 01 Dec 2016 10:02:43 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/bzoj3744/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bzoj2957题解</title>
      <link>http://whatever.seraphim.rocks/post/bzoj2957/</link>
      <pubDate>Wed, 21 Sep 2016 10:02:43 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/bzoj2957/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bzoj2141题解</title>
      <link>http://whatever.seraphim.rocks/post/bzoj2141/</link>
      <pubDate>Sat, 02 Jul 2016 10:02:43 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/bzoj2141/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bzoj3065题解</title>
      <link>http://whatever.seraphim.rocks/post/bzoj3065/</link>
      <pubDate>Sun, 29 May 2016 10:02:43 +0000</pubDate>
      
      <guid>http://whatever.seraphim.rocks/post/bzoj3065/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>