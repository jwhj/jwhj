<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codeforces on 蒟蒻的博客</title>
    <link>http://blog.eleele.tk/tags/codeforces/</link>
    <description>Recent content in Codeforces on 蒟蒻的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Mar 2018 12:47:23 +0000</lastBuildDate>
    
	<atom:link href="http://blog.eleele.tk/tags/codeforces/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CF936B题解</title>
      <link>http://blog.eleele.tk/post/cf936b/</link>
      <pubDate>Fri, 09 Mar 2018 12:47:23 +0000</pubDate>
      
      <guid>http://blog.eleele.tk/post/cf936b/</guid>
      <description>如果图中不存在环，那么直接dfs就可以了。
现在图中有环，我的第一想法是缩点，但是怎么也想不出来……
事实上走环并非是毫无意义的，走一个奇环，路径长的奇偶性改变；走一个偶环，虽然奇偶性不改变，但如果赢不了的话可以一直在上面走。
仔细观察可以发现，重复经过一个点也不是毫无意义的，如果两次经过的时候走过路径的长度奇偶性不同，那两次都是有意义的。
于是可以想到拆点，每个点$s$拆成$s_0$和$s_1$，对于每条边$(s,t)$，变成两条边$(s_0,t_1)$和$(s_1,t_0)$，那么具体走到哪个点上就已经代表了路径长的奇偶性。从$s_0$开始dfs，不经过已经经过的点，如果能走到一个出度为0的$x_1$上，那就能赢，如果遇到一个环，那么至少可以平局。
一开始WA了好久，以后要注意有向图的vis和instack是不一样的，判断有没有发现一个环的时候要用instack来判断。
代码：
#include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;algorithm&amp;gt; #define ele int using namespace std; #define maxn 200010 #define maxm 400010 struct edge{ ele v; edge *nxt; }ep[maxm],*ecnt; ele n,m,s,ans,tmp,prv[maxn]; bool vis[maxn],instack[maxn]; edge *h[maxn]; inline void addedge(ele u,ele v){ edge *p=ecnt++; p-&amp;gt;v=v; p-&amp;gt;nxt=h[u]; h[u]=p; } void dfs(ele i){ vis[i]=true; instack[i]=true; if (!h[i] &amp;amp;&amp;amp; (i&amp;amp;1)){ ans=min(ans,0); tmp=i; } for (edge *j=h[i]; j; j=j-&amp;gt;nxt) if (!vis[j-&amp;gt;v]) prv[j-&amp;gt;v]=i,dfs(j-&amp;gt;v); else if (instack[j-&amp;gt;v]) ans=min(ans,1); instack[i]=false; } void dfs1(ele i){ if (!</description>
    </item>
    
    <item>
      <title>CF725D题解</title>
      <link>http://blog.eleele.tk/post/cf725d/</link>
      <pubDate>Sun, 23 Oct 2016 10:02:43 +0000</pubDate>
      
      <guid>http://blog.eleele.tk/post/cf725d/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CF718C题解</title>
      <link>http://blog.eleele.tk/post/cf718c/</link>
      <pubDate>Sat, 24 Sep 2016 10:02:43 +0000</pubDate>
      
      <guid>http://blog.eleele.tk/post/cf718c/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>